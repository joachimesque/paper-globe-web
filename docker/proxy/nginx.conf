# https://www.nginx.com/blog/rate-limiting-nginx/
limit_req_zone $binary_remote_addr zone=my_rate_limit:10m rate=10r/s;

upstream web {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  # for a TCP configuration
  server web:5000 fail_timeout=0;
}

server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

server {
  # use 'listen 80 deferred;' for Linux
  # use 'listen 80 accept_filter=httpready;' for FreeBSD
  listen 80;
  client_max_body_size 4G;
  # set the correct host(s) for your site
  server_name localhost;

  keepalive_timeout 5;

  index index.html;

  location / {
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }

  # location /static/ {
  #     alias /usr/paperglobe_web/static/;
  # }

  root /usr/src/app/static;

  location /export/ {
      alias /usr/paperglobe_web/export/;
  }

  location @proxy_to_app {
    limit_req zone=my_rate_limit burst=20 nodelay;
    limit_req_status 429;
    limit_conn_status 429;


    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    # turn off proxy buffering for web sockets
    proxy_buffering off;
    proxy_pass http://web;
  }
}


